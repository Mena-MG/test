// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using assmint.Data;

#nullable disable

namespace assmint.Migrations
{
    [DbContext(typeof(AppDBContext))]
    partial class AppDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("assmint.Models.Project", b =>
                {
                    b.Property<int>("Projectid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Projectid"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("stratdatee")
                        .HasColumnType("datetime2");

                    b.HasKey("Projectid");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("assmint.Models.Taske", b =>
                {
                    b.Property<int>("Taskeid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Taskeid"));

                    b.Property<int>("Projectsid")
                        .HasColumnType("int");

                    b.Property<int>("TeamMembersid")
                        .HasColumnType("int");

                    b.Property<DateTime>("deadlin")
                        .HasColumnType("datetime2");

                    b.Property<string>("descrription")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("priority")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("statues")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Taskeid");

                    b.HasIndex("Projectsid");

                    b.HasIndex("TeamMembersid");

                    b.ToTable("tasks");
                });

            modelBuilder.Entity("assmint.Models.TeamMember", b =>
                {
                    b.Property<int>("TeamMemberid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeamMemberid"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("TeamMemberid");

                    b.ToTable("TeamMember");
                });

            modelBuilder.Entity("assmint.Models.Taske", b =>
                {
                    b.HasOne("assmint.Models.Project", "Projects")
                        .WithMany("taskes")
                        .HasForeignKey("Projectsid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("assmint.Models.TeamMember", "TeamMembers")
                        .WithMany("tasks")
                        .HasForeignKey("TeamMembersid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Projects");

                    b.Navigation("TeamMembers");
                });

            modelBuilder.Entity("assmint.Models.Project", b =>
                {
                    b.Navigation("taskes");
                });

            modelBuilder.Entity("assmint.Models.TeamMember", b =>
                {
                    b.Navigation("tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
